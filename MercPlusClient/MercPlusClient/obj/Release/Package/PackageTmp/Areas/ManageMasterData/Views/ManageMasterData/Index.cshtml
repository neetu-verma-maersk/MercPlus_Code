@model MercPlusClient.Areas.ManageMasterData.Models.ManageMasterDataIndexModel
@{
    ViewBag.Title = "Index";
    ViewBag.ModifyButtonValue = "Update-Get Mode";
    ViewBag.AddButtonValue = "Add-Get Manual Code";
    Layout = "~/Views/Shared/_MercPlusLayout.cshtml";
}
<script type="text/javascript" src="~/Areas/ManageMasterData/Script/masterData.js" ></script>
<script type="text/javascript">
    function ValidateNumber(e)
    {
        var evt = (e) ? e : window.event;
        var charCode = (evt.keyCode) ? evt.keyCode : evt.which; 
        //if (charCode > 31 && (charCode < 48 || charCode > 57))
        if (charCode >= 48 && charCode <= 57)
        {
            //alert(charCode);
            return true;
        }
        //else if (charCode == 16) {
        //    evt.preventDefault();
        //    return false;
        //}
        return false;
    }

    function ClientValidation(isAdd) {

        var errMsg = "";
        var isError = false;
        $("#ErrorMsgContainer").html("");
        var val1 = "";
        if (isAdd) {
            HighlightInputsForError($("#txtIndexId"), false)
            val1 = $("#txtIndexId").val();
            if (val1.trim() == "") {
                isError = true;
                errMsg += "Please Enter a New Index ID";
                HighlightInputsForError($("#txtIndexId"), isError)
            }
        }
        HighlightInputsForError($("#txtIndexDesc"), false)
        val1 = $("#txtIndexDesc").val();
        if (val1.trim() == "") {
            isError = true;
            if(errMsg.trim()=="")
                errMsg = "Please Enter an Index Description ";
            else
                errMsg += ", Index Description ";
            HighlightInputsForError($("#txtIndexDesc"), isError)
        }
        
        if (isError == true) {
            ShowRemoveValidationMessage(errMsg, "Warning")
            return false;
        }
        else {
            return true;
        }
    }

    function ComboSelectionValidate(comboName)
    {
        var errMsg = "";
        var isError = false;
        $("#ErrorMsgContainer").html("");
        var val1 = "";
        if (comboName == "drpIndexManual")
        {
            HighlightInputsForError($("#drpIndexManual"), false)
            if (document.getElementById('drpIndexManual').selectedIndex == 0)
            {
                isError = true;
                errMsg += "Please Select a Manual Code ";
                HighlightInputsForError($("#drpIndexManual"), isError)
            }
        }
        else if (comboName == "drpIndexMode")
        {
            HighlightInputsForError($("#drpIndexMode"), false)
            if (document.getElementById('drpIndexMode').selectedIndex == 0)
            {
                isError = true;
                errMsg += "Please Select a Mode ";
                HighlightInputsForError($("#drpIndexMode"), isError)
            }
        }
        else if (comboName == "drpIndex")
        {
            HighlightInputsForError($("#drpIndex"), false)
            if (document.getElementById('drpIndex').selectedIndex == 0)
            {
                isError = true;
                errMsg += "Please Select an Index ";
                HighlightInputsForError($("#drpIndex"), isError)
            }
        }
        if (isError == true) {
            ShowRemoveValidationMessage(errMsg, "Warning")
            return false;
        }
        else {
            return true;
        }
    }

    function DeleteConfirmMsg() {
        return confirm("Are you sure you want to delete this record?")
    }
</script>
@using(Html.BeginForm())
{
    <div style="float:right;"><a href="~/HelpFiles/help/merc/3_HelpScrns_DoNotChangeStructure/tablemod_index_help.htm" target="_blank">Tables and Dependencies Help File</a></div>
    <h2>Add, Update or Delete Index</h2>
    <div id="ErrorMsgContainer" style="width: 750px; vertical-align: text-top;"> 
          @Html.Raw(TempData["Msg"] != null ? TempData["Msg"].ToString() : "")
    </div>
    <table border="0" cellpadding="5" cellspacing="0" style="width: 700px; vertical-align: text-top;">
        @if(Model.IndexSelectionMode==MercPlusClient.Areas.ManageMasterData.Models.ManageMasterDataIndexModel.IndexSelectionModes.IndexManualCode)
        {
            <tr id="trIndexManualSelect">
                <td class="style3" style="vertical-align: top; width:25%">
                    @Html.Label("Select Manual Code")
                </td>
                <td class="style2" style="text-align: left; vertical-align: top;">
                    @Html.DropDownListFor(model=>model.IndexManualCode, Model.drpIndexManual, "Select", new{id="drpIndexManual"})
                </td>
            </tr>
            if (Model.IsInsertMode)
            {
                <tr>
                    <td colspan="2">
                        <input type="submit" value="Add - Get Mode" id="btnIndexAddMode" formaction="/ManageMasterData/ManageMasterData/GetIndexModeAdd" onclick="return ComboSelectionValidate('drpIndexManual');" />
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td>
                        <input type="submit" value="Update - Get Mode" id="btnIndexGetMode" formaction="/ManageMasterData/ManageMasterData/GetIndexMode"  onclick="return ComboSelectionValidate('drpIndexManual');" />
                    </td>
                    <td>
                        <input type="submit" value="Add - Get Manual Code" id="btnIndexAddMAnualCode" formaction="/ManageMasterData/ManageMasterData/IndexNew" />
                    </td>
                </tr>
        }
        }
        else if (Model.IndexSelectionMode == MercPlusClient.Areas.ManageMasterData.Models.ManageMasterDataIndexModel.IndexSelectionModes.IndexMode)
        {
            <tr>
                <td class="style3" style="vertical-align: top; width:20%">
                    @Html.Label("Select Mode")
                </td>
                <td>
                    @Html.DropDownListFor(model=>model.IndexMode, Model.drpIndexMode, "Select", new{id="drpIndexMode"})
                </td>
            </tr>
            <tr>
                <td colspan="2">
                    
                </td>
            </tr>
            if (Model.IsInsertMode)
            {
                <tr>
                    <td>
                        <input type="submit" value="Add New" id="btnAddGetIndex" formaction="/ManageMasterData/ManageMasterData/GetIndexDropDownAdd"  onclick="return ComboSelectionValidate('drpIndexMode');" />
                    </td>
                    <td>
                        &nbsp;
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td>
                        <input type="submit" value="Update - Get Index" id="btnGetIndex" formaction="/ManageMasterData/ManageMasterData/GetIndexDropDown" onclick="return ComboSelectionValidate('drpIndexMode');" />
                    </td>
                    <td>
                        &nbsp;
                    </td>
                </tr>
            }
        }
        else if (Model.IndexSelectionMode == MercPlusClient.Areas.ManageMasterData.Models.ManageMasterDataIndexModel.IndexSelectionModes.Index)
        {
            <tr>
                <td class="style3" style="vertical-align: top; width:20%">
                    @Html.Label("Select Index")
                </td>
                <td>
                    @Html.DropDownListFor(model=>model.IndexID, Model.drpIndex, "Select", new{id="drpIndex"})
                </td>
            </tr>
            <tr>
                <td>
                    <input type="submit" value="Update - Get Index Record" id="btnGetIndexRecord" formaction="/ManageMasterData/ManageMasterData/GetIndexResult" onclick="return ComboSelectionValidate('drpIndex');" />
                </td>
                <td>
                    &nbsp;
                </td>
            </tr>
           
        }
        else if (Model.IndexSelectionMode == MercPlusClient.Areas.ManageMasterData.Models.ManageMasterDataIndexModel.IndexSelectionModes.IndexRecord)
        {
            <tr>
                <td>@Html.Label("Manual Code")</td>
                <td>
                    @Html.TextBoxFor(model=>model.IndexManualCode, new {id="txtManualCode", @readonly="true"})
                </td>
            </tr>
             <tr>
                <td>@Html.Label("Mode")</td>
                <td>
                    @Html.TextBoxFor(model=>model.IndexMode, new {id="txtIndexMode", @readonly="true"})
                </td>
            </tr>
            if (Model.IsInsertMode)
            {
                <tr>
                    <td>@Html.Label("Index ID")</td>
                    <td>
                        @Html.TextBoxFor(model=>model.IndexID, new {id="txtIndexId", onkeypress="return ValidateNumber(event);", maxlength="4"})
                    </td>
                </tr>
            }
            else
            {
                 <tr>
                    <td>@Html.Label("Index ID")</td>
                    <td>
                        @Html.TextBoxFor(model=>model.IndexID, new {id="txtIndexId", @readonly="true"})
                    </td>
                </tr>
            }
            <tr>
                <td>@Html.Label("Index Description")</td>
                <td>
                    @Html.TextBoxFor(model=>model.IndexDesc, new {id="txtIndexDesc", size="60", maxlength="60"})
                </td>
            </tr>
            if(!Model.IsInsertMode)
            {
                <tr>
                    <td>@Html.Label("Change User Name")</td>
                    <td>
                        <table border="0" cellpadding="0" cellspacing="0">
                            <tr>
                                <td style="padding:0 0 0 0;">
                                    @Html.TextBoxFor(model=>model.IndexChangeUserFName, new {id="txtIndexCHUser", @readonly="true", style="width:200px"})
                                </td>
                                <td>
                                    @Html.TextBoxFor(model=>model.IndexChangeUserLName, new {id="txtIndexCHUser1", @readonly="true", style="width:200px"})
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
                <tr>
                    <td>@Html.Label("Changed Time")</td>
                    <td>
                        @Html.TextBoxFor(model=>model.IndexChangeTime, new {id="txtIndexChTime", @readonly="true", style="width:200px"})
                    </td>
                </tr>
                <tr>
                    <td>
                        <input type="submit" value="Update" id="btnIndexUpdate" formaction="/ManageMasterData/ManageMasterData/ModifyIndex" onclick="return ClientValidation(false);" />
                    </td>
                    <td>
                        <input type="submit" value="Delete" id="btnIndexDelete" formaction="/ManageMasterData/ManageMasterData/DeleteIndex" onclick="return DeleteConfirmMsg();" />
                        <div style="float:right">
                        <input type="submit" value="Return to Update - Add - Delete" id="btnIndexReturn" formaction="/ManageMasterData/ManageMasterData/Index"  />
                        </div>
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td>
                        <input type="submit" value="Add Record" id="btnIndexCreate" formaction="/ManageMasterData/ManageMasterData/InsertIndex" onclick="return ClientValidation(true);" />
                    </td>
                    <td>
                        <input type="submit" value="Return to Update - Add - Delete" id="btnAddIndexReturn" formaction="/ManageMasterData/ManageMasterData/Index"  />
                    </td>
                </tr>
            }
        }
        
    </table>
    @Html.HiddenFor(model=>model.IndexManualCode,new{id="hddIndexManualCode"})
    @Html.HiddenFor(model=>model.IndexMode,new{id="hddIndexMode"})
}