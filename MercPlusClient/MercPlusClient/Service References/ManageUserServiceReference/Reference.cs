//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MercPlusClient.ManageUserServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://schemas.datacontract.org/2004/07/MercPlusLibrary")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActiveStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> ApproveAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ChangeTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsUserActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastLogInDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoccdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginFirstAndLastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActiveStatus {
            get {
                return this.ActiveStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ActiveStatusField, value) != true)) {
                    this.ActiveStatusField = value;
                    this.RaisePropertyChanged("ActiveStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> ApproveAmount {
            get {
                return this.ApproveAmountField;
            }
            set {
                if ((this.ApproveAmountField.Equals(value) != true)) {
                    this.ApproveAmountField = value;
                    this.RaisePropertyChanged("ApproveAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthGroupName {
            get {
                return this.AuthGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthGroupNameField, value) != true)) {
                    this.AuthGroupNameField = value;
                    this.RaisePropertyChanged("AuthGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ChangeTime {
            get {
                return this.ChangeTimeField;
            }
            set {
                if ((this.ChangeTimeField.Equals(value) != true)) {
                    this.ChangeTimeField = value;
                    this.RaisePropertyChanged("ChangeTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeUser {
            get {
                return this.ChangeUserField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeUserField, value) != true)) {
                    this.ChangeUserField = value;
                    this.RaisePropertyChanged("ChangeUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailId {
            get {
                return this.EmailIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailIdField, value) != true)) {
                    this.EmailIdField = value;
                    this.RaisePropertyChanged("EmailId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsUserActive {
            get {
                return this.IsUserActiveField;
            }
            set {
                if ((this.IsUserActiveField.Equals(value) != true)) {
                    this.IsUserActiveField = value;
                    this.RaisePropertyChanged("IsUserActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastLogInDateTime {
            get {
                return this.LastLogInDateTimeField;
            }
            set {
                if ((this.LastLogInDateTimeField.Equals(value) != true)) {
                    this.LastLogInDateTimeField = value;
                    this.RaisePropertyChanged("LastLogInDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Loccd {
            get {
                return this.LoccdField;
            }
            set {
                if ((object.ReferenceEquals(this.LoccdField, value) != true)) {
                    this.LoccdField = value;
                    this.RaisePropertyChanged("Loccd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginFirstAndLastName {
            get {
                return this.LoginFirstAndLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginFirstAndLastNameField, value) != true)) {
                    this.LoginFirstAndLastNameField = value;
                    this.RaisePropertyChanged("LoginFirstAndLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Country", Namespace="http://schemas.datacontract.org/2004/07/MercPlusLibrary")]
    [System.SerializableAttribute()]
    public partial class Country : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ChangeTimeConField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangeUserConField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeAndDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryGeoIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNotFoundField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MercPlusClient.ManageUserServiceReference.ErrMessage ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> RepairLimitAdjFactorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ShowDivField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaCode {
            get {
                return this.AreaCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaCodeField, value) != true)) {
                    this.AreaCodeField = value;
                    this.RaisePropertyChanged("AreaCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ChangeTimeCon {
            get {
                return this.ChangeTimeConField;
            }
            set {
                if ((this.ChangeTimeConField.Equals(value) != true)) {
                    this.ChangeTimeConField = value;
                    this.RaisePropertyChanged("ChangeTimeCon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangeUserCon {
            get {
                return this.ChangeUserConField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangeUserConField, value) != true)) {
                    this.ChangeUserConField = value;
                    this.RaisePropertyChanged("ChangeUserCon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCodeAndDescription {
            get {
                return this.CountryCodeAndDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeAndDescriptionField, value) != true)) {
                    this.CountryCodeAndDescriptionField = value;
                    this.RaisePropertyChanged("CountryCodeAndDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryDescription {
            get {
                return this.CountryDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryDescriptionField, value) != true)) {
                    this.CountryDescriptionField = value;
                    this.RaisePropertyChanged("CountryDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryGeoID {
            get {
                return this.CountryGeoIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryGeoIDField, value) != true)) {
                    this.CountryGeoIDField = value;
                    this.RaisePropertyChanged("CountryGeoID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryNotFound {
            get {
                return this.CountryNotFoundField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNotFoundField, value) != true)) {
                    this.CountryNotFoundField = value;
                    this.RaisePropertyChanged("CountryNotFound");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MercPlusClient.ManageUserServiceReference.ErrMessage ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> RepairLimitAdjFactor {
            get {
                return this.RepairLimitAdjFactorField;
            }
            set {
                if ((this.RepairLimitAdjFactorField.Equals(value) != true)) {
                    this.RepairLimitAdjFactorField = value;
                    this.RaisePropertyChanged("RepairLimitAdjFactor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowDiv {
            get {
                return this.ShowDivField;
            }
            set {
                if ((this.ShowDivField.Equals(value) != true)) {
                    this.ShowDivField = value;
                    this.RaisePropertyChanged("ShowDiv");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrMessage", Namespace="http://schemas.datacontract.org/2004/07/MercPlusLibrary")]
    [System.SerializableAttribute()]
    public partial class ErrMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ErrorNo {
            get {
                return this.ErrorNoField;
            }
            set {
                if ((this.ErrorNoField.Equals(value) != true)) {
                    this.ErrorNoField = value;
                    this.RaisePropertyChanged("ErrorNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorType {
            get {
                return this.ErrorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTypeField, value) != true)) {
                    this.ErrorTypeField = value;
                    this.RaisePropertyChanged("ErrorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssignAuthGroup", Namespace="http://schemas.datacontract.org/2004/07/MercPlusLibrary")]
    [System.SerializableAttribute()]
    public partial class AssignAuthGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueItemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListItem {
            get {
                return this.ListItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ListItemField, value) != true)) {
                    this.ListItemField = value;
                    this.RaisePropertyChanged("ListItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueItem {
            get {
                return this.ValueItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueItemField, value) != true)) {
                    this.ValueItemField = value;
                    this.RaisePropertyChanged("ValueItem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AvailableAssignAuthGroup", Namespace="http://schemas.datacontract.org/2004/07/MercPlusLibrary")]
    [System.SerializableAttribute()]
    public partial class AvailableAssignAuthGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListItemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueItemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ListItem {
            get {
                return this.ListItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ListItemField, value) != true)) {
                    this.ListItemField = value;
                    this.RaisePropertyChanged("ListItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueItem {
            get {
                return this.ValueItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueItemField, value) != true)) {
                    this.ValueItemField = value;
                    this.RaisePropertyChanged("ValueItem");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecAuthGroup", Namespace="http://schemas.datacontract.org/2004/07/MercPlusLibrary")]
    [System.SerializableAttribute()]
    public partial class SecAuthGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentAuthGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReadOnlySwField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthGroupId {
            get {
                return this.AuthGroupIdField;
            }
            set {
                if ((this.AuthGroupIdField.Equals(value) != true)) {
                    this.AuthGroupIdField = value;
                    this.RaisePropertyChanged("AuthGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthGroupName {
            get {
                return this.AuthGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthGroupNameField, value) != true)) {
                    this.AuthGroupNameField = value;
                    this.RaisePropertyChanged("AuthGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnDesc {
            get {
                return this.ColumnDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnDescField, value) != true)) {
                    this.ColumnDescField = value;
                    this.RaisePropertyChanged("ColumnDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentAuthGroupId {
            get {
                return this.ParentAuthGroupIdField;
            }
            set {
                if ((this.ParentAuthGroupIdField.Equals(value) != true)) {
                    this.ParentAuthGroupIdField = value;
                    this.RaisePropertyChanged("ParentAuthGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReadOnlySw {
            get {
                return this.ReadOnlySwField;
            }
            set {
                if ((object.ReferenceEquals(this.ReadOnlySwField, value) != true)) {
                    this.ReadOnlySwField = value;
                    this.RaisePropertyChanged("ReadOnlySw");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecAuthGroupUserInfo", Namespace="http://schemas.datacontract.org/2004/07/MercPlusLibrary")]
    [System.SerializableAttribute()]
    public partial class SecAuthGroupUserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccessIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AuthGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColumnValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessId {
            get {
                return this.AccessIdField;
            }
            set {
                if ((this.AccessIdField.Equals(value) != true)) {
                    this.AccessIdField = value;
                    this.RaisePropertyChanged("AccessId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthGroupId {
            get {
                return this.AuthGroupIdField;
            }
            set {
                if ((this.AuthGroupIdField.Equals(value) != true)) {
                    this.AuthGroupIdField = value;
                    this.RaisePropertyChanged("AuthGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AuthGroupName {
            get {
                return this.AuthGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthGroupNameField, value) != true)) {
                    this.AuthGroupNameField = value;
                    this.RaisePropertyChanged("AuthGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnDesc {
            get {
                return this.ColumnDescField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnDescField, value) != true)) {
                    this.ColumnDescField = value;
                    this.RaisePropertyChanged("ColumnDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnName {
            get {
                return this.ColumnNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnNameField, value) != true)) {
                    this.ColumnNameField = value;
                    this.RaisePropertyChanged("ColumnName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColumnValue {
            get {
                return this.ColumnValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ColumnValueField, value) != true)) {
                    this.ColumnValueField = value;
                    this.RaisePropertyChanged("ColumnValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecWebSite", Namespace="http://schemas.datacontract.org/2004/07/MercPlusLibrary")]
    [System.SerializableAttribute()]
    public partial class SecWebSite : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WebSiteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebSiteNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WebSiteId {
            get {
                return this.WebSiteIdField;
            }
            set {
                if ((this.WebSiteIdField.Equals(value) != true)) {
                    this.WebSiteIdField = value;
                    this.RaisePropertyChanged("WebSiteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebSiteName {
            get {
                return this.WebSiteNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WebSiteNameField, value) != true)) {
                    this.WebSiteNameField = value;
                    this.RaisePropertyChanged("WebSiteName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecWebPage", Namespace="http://schemas.datacontract.org/2004/07/MercPlusLibrary")]
    [System.SerializableAttribute()]
    public partial class SecWebPage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WebPageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebPageNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WebSiteIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WebPageId {
            get {
                return this.WebPageIdField;
            }
            set {
                if ((this.WebPageIdField.Equals(value) != true)) {
                    this.WebPageIdField = value;
                    this.RaisePropertyChanged("WebPageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebPageName {
            get {
                return this.WebPageNameField;
            }
            set {
                if ((object.ReferenceEquals(this.WebPageNameField, value) != true)) {
                    this.WebPageNameField = value;
                    this.RaisePropertyChanged("WebPageName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WebSiteId {
            get {
                return this.WebSiteIdField;
            }
            set {
                if ((this.WebSiteIdField.Equals(value) != true)) {
                    this.WebSiteIdField = value;
                    this.RaisePropertyChanged("WebSiteId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ManageUserServiceReference.IManageUser")]
    public interface IManageUser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/isUserExistInDb", ReplyAction="http://tempuri.org/IManageUser/isUserExistInDbResponse")]
        bool isUserExistInDb(string Login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/AddUser", ReplyAction="http://tempuri.org/IManageUser/AddUserResponse")]
        bool AddUser(out string Msg, MercPlusClient.ManageUserServiceReference.UserInfo UserInfoFromClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/GetCountryList", ReplyAction="http://tempuri.org/IManageUser/GetCountryListResponse")]
        MercPlusClient.ManageUserServiceReference.Country[] GetCountryList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/UpdateUser", ReplyAction="http://tempuri.org/IManageUser/UpdateUserResponse")]
        bool UpdateUser(out string Msg, MercPlusClient.ManageUserServiceReference.UserInfo UserInfoFromClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/UpdateUserActiveStatus", ReplyAction="http://tempuri.org/IManageUser/UpdateUserActiveStatusResponse")]
        bool UpdateUserActiveStatus(out string Msg, int day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/DeleteUser", ReplyAction="http://tempuri.org/IManageUser/DeleteUserResponse")]
        bool DeleteUser(out string Msg, int UserToBeDeleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/DeleteUserDataAccessByUserId", ReplyAction="http://tempuri.org/IManageUser/DeleteUserDataAccessByUserIdResponse")]
        bool DeleteUserDataAccessByUserId(out string Msg, int UserToBeDeleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/GetUserListOfACountry", ReplyAction="http://tempuri.org/IManageUser/GetUserListOfACountryResponse")]
        MercPlusClient.ManageUserServiceReference.UserInfo[] GetUserListOfACountry(string CountryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/GetUserByUserId", ReplyAction="http://tempuri.org/IManageUser/GetUserByUserIdResponse")]
        MercPlusClient.ManageUserServiceReference.UserInfo[] GetUserByUserId(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/GetUserByEmailId", ReplyAction="http://tempuri.org/IManageUser/GetUserByEmailIdResponse")]
        MercPlusClient.ManageUserServiceReference.UserInfo[] GetUserByEmailId(string EmailId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/GetUserByLoginId", ReplyAction="http://tempuri.org/IManageUser/GetUserByLoginIdResponse")]
        MercPlusClient.ManageUserServiceReference.UserInfo[] GetUserByLoginId(string LoginId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/IsLocationCodeExist", ReplyAction="http://tempuri.org/IManageUser/IsLocationCodeExistResponse")]
        bool IsLocationCodeExist(string LocCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/AvailablePermissions", ReplyAction="http://tempuri.org/IManageUser/AvailablePermissionsResponse")]
        MercPlusClient.ManageUserServiceReference.AssignAuthGroup[] AvailablePermissions(int UserId, int AuthGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/AvailablePermissionsByFilter", ReplyAction="http://tempuri.org/IManageUser/AvailablePermissionsByFilterResponse")]
        MercPlusClient.ManageUserServiceReference.AvailableAssignAuthGroup[] AvailablePermissionsByFilter(out int AvailablePermissionCount, int UserId, int AuthGroupId, string SD);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/GetAuthGroupList", ReplyAction="http://tempuri.org/IManageUser/GetAuthGroupListResponse")]
        MercPlusClient.ManageUserServiceReference.SecAuthGroup[] GetAuthGroupList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/GetAuthGroupByAuthgroupId", ReplyAction="http://tempuri.org/IManageUser/GetAuthGroupByAuthgroupIdResponse")]
        MercPlusClient.ManageUserServiceReference.SecAuthGroup[] GetAuthGroupByAuthgroupId(int AuthGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/GetAuthGroupByUserID", ReplyAction="http://tempuri.org/IManageUser/GetAuthGroupByUserIDResponse")]
        MercPlusClient.ManageUserServiceReference.SecAuthGroupUserInfo[] GetAuthGroupByUserID(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/InsertUserDataAccess", ReplyAction="http://tempuri.org/IManageUser/InsertUserDataAccessResponse")]
        bool InsertUserDataAccess(out string Msg, string SelectedActivePermission, int UserId, int AuthorisationGroupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/GetWebPageList", ReplyAction="http://tempuri.org/IManageUser/GetWebPageListResponse")]
        MercPlusClient.ManageUserServiceReference.SecWebSite[] GetWebPageList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/GetWebpageListByWebsiteId", ReplyAction="http://tempuri.org/IManageUser/GetWebpageListByWebsiteIdResponse")]
        MercPlusClient.ManageUserServiceReference.SecWebSite[] GetWebpageListByWebsiteId(int WebSiteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/GetAuthGroupWebpageAccessById", ReplyAction="http://tempuri.org/IManageUser/GetAuthGroupWebpageAccessByIdResponse")]
        MercPlusClient.ManageUserServiceReference.SecWebPage[] GetAuthGroupWebpageAccessById(int WebSiteId, int AuthId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/UpdateWebPagePermissions", ReplyAction="http://tempuri.org/IManageUser/UpdateWebPagePermissionsResponse")]
        bool UpdateWebPagePermissions(out string Msg, string SelectedWebSitePermissions, int AuthorisationGroupId, int WebpageId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManageUser/AddAllCluster", ReplyAction="http://tempuri.org/IManageUser/AddAllClusterResponse")]
        bool AddAllCluster(out string Msg, int UserId, int AuthorisationGroupId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManageUserChannel : MercPlusClient.ManageUserServiceReference.IManageUser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManageUserClient : System.ServiceModel.ClientBase<MercPlusClient.ManageUserServiceReference.IManageUser>, MercPlusClient.ManageUserServiceReference.IManageUser {
        
        public ManageUserClient() {
        }
        
        public ManageUserClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManageUserClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManageUserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManageUserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool isUserExistInDb(string Login) {
            return base.Channel.isUserExistInDb(Login);
        }
        
        public bool AddUser(out string Msg, MercPlusClient.ManageUserServiceReference.UserInfo UserInfoFromClient) {
            return base.Channel.AddUser(out Msg, UserInfoFromClient);
        }
        
        public MercPlusClient.ManageUserServiceReference.Country[] GetCountryList() {
            return base.Channel.GetCountryList();
        }
        
        public bool UpdateUser(out string Msg, MercPlusClient.ManageUserServiceReference.UserInfo UserInfoFromClient) {
            return base.Channel.UpdateUser(out Msg, UserInfoFromClient);
        }
        
        public bool UpdateUserActiveStatus(out string Msg, int day) {
            return base.Channel.UpdateUserActiveStatus(out Msg, day);
        }
        
        public bool DeleteUser(out string Msg, int UserToBeDeleted) {
            return base.Channel.DeleteUser(out Msg, UserToBeDeleted);
        }
        
        public bool DeleteUserDataAccessByUserId(out string Msg, int UserToBeDeleted) {
            return base.Channel.DeleteUserDataAccessByUserId(out Msg, UserToBeDeleted);
        }
        
        public MercPlusClient.ManageUserServiceReference.UserInfo[] GetUserListOfACountry(string CountryId) {
            return base.Channel.GetUserListOfACountry(CountryId);
        }
        
        public MercPlusClient.ManageUserServiceReference.UserInfo[] GetUserByUserId(int UserId) {
            return base.Channel.GetUserByUserId(UserId);
        }
        
        public MercPlusClient.ManageUserServiceReference.UserInfo[] GetUserByEmailId(string EmailId) {
            return base.Channel.GetUserByEmailId(EmailId);
        }
        
        public MercPlusClient.ManageUserServiceReference.UserInfo[] GetUserByLoginId(string LoginId) {
            return base.Channel.GetUserByLoginId(LoginId);
        }
        
        public bool IsLocationCodeExist(string LocCode) {
            return base.Channel.IsLocationCodeExist(LocCode);
        }
        
        public MercPlusClient.ManageUserServiceReference.AssignAuthGroup[] AvailablePermissions(int UserId, int AuthGroupId) {
            return base.Channel.AvailablePermissions(UserId, AuthGroupId);
        }
        
        public MercPlusClient.ManageUserServiceReference.AvailableAssignAuthGroup[] AvailablePermissionsByFilter(out int AvailablePermissionCount, int UserId, int AuthGroupId, string SD) {
            return base.Channel.AvailablePermissionsByFilter(out AvailablePermissionCount, UserId, AuthGroupId, SD);
        }
        
        public MercPlusClient.ManageUserServiceReference.SecAuthGroup[] GetAuthGroupList() {
            return base.Channel.GetAuthGroupList();
        }
        
        public MercPlusClient.ManageUserServiceReference.SecAuthGroup[] GetAuthGroupByAuthgroupId(int AuthGroupId) {
            return base.Channel.GetAuthGroupByAuthgroupId(AuthGroupId);
        }
        
        public MercPlusClient.ManageUserServiceReference.SecAuthGroupUserInfo[] GetAuthGroupByUserID(int UserId) {
            return base.Channel.GetAuthGroupByUserID(UserId);
        }
        
        public bool InsertUserDataAccess(out string Msg, string SelectedActivePermission, int UserId, int AuthorisationGroupId) {
            return base.Channel.InsertUserDataAccess(out Msg, SelectedActivePermission, UserId, AuthorisationGroupId);
        }
        
        public MercPlusClient.ManageUserServiceReference.SecWebSite[] GetWebPageList() {
            return base.Channel.GetWebPageList();
        }
        
        public MercPlusClient.ManageUserServiceReference.SecWebSite[] GetWebpageListByWebsiteId(int WebSiteId) {
            return base.Channel.GetWebpageListByWebsiteId(WebSiteId);
        }
        
        public MercPlusClient.ManageUserServiceReference.SecWebPage[] GetAuthGroupWebpageAccessById(int WebSiteId, int AuthId) {
            return base.Channel.GetAuthGroupWebpageAccessById(WebSiteId, AuthId);
        }
        
        public bool UpdateWebPagePermissions(out string Msg, string SelectedWebSitePermissions, int AuthorisationGroupId, int WebpageId) {
            return base.Channel.UpdateWebPagePermissions(out Msg, SelectedWebSitePermissions, AuthorisationGroupId, WebpageId);
        }
        
        public bool AddAllCluster(out string Msg, int UserId, int AuthorisationGroupId) {
            return base.Channel.AddAllCluster(out Msg, UserId, AuthorisationGroupId);
        }
    }
}
